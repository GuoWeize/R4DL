[
    {
        "#": "1",
        "*": "functional",
        ":": "A class is used to represent the dependency between one task and one human resource.",
        "agent": {"entity": "class"},
        "operation": {"operation": "represent"},
        "input": {
            "-set-": [
                {"entity": "task"},
                {"entity": "human resource"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "dependency between one task and one human resource"}
            ]
        }
    },
    {
        "#": "2",
        "*": "functional",
        ":": "The dependency class provides functions to get the task and the human resource.",
        "agent": {"entity": "dependency class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "task"},
                {"entity": "human resource"}
            ]
        }
    },
    {
        "#": "4",
        "*": "functional",
        ":": "A collection of resource assignments is used to manage the relationships between multiple human resources and a task.",
        "agent": {"entity": "collection of resource assignments"},
        "operation": {"operation": "manage"},
        "input": {
            "-set-": [
                {"entity": "relationships between multiple human resources and a task"},
                {"entity": "multiple human resources"},
                {"entity": "task"}
            ]
        }
    },
    {
        "#": "5",
        "*": "functional",
        ":": "A collection of resource assignments contains multiple objects of the human resource assignment class.",
        "agent": {"entity": "collection of resource assignments"},
        "operation": {"operation": "contain"},
        "input": {
            "-set-": [
                {"entity": "multiple objects of the human resource assignment class"}
            ]
        }
    },
    {
        "#": "6-1",
        "*": "functional",
        ":": "A collection of resource assignments provides functions to add and remove human resource assignments.",
        "agent": {"entity": "collection of resource assignments"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        }
    },
    {
        "#": "6-2",
        "*": "functional",
        ":": "A collection of resource assignments provides functions to add and remove human resource assignments.",
        "agent": {"entity": "collection of resource assignments"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        }
    },
    {
        "#": "8",
        "*": "functional",
        ":": "The task class uses an object of the assignments collection class to manage its assignments.",
        "agent": {"entity": "task class"},
        "operation": {"operation": "manage"},
        "input": {
            "-set-": [
                {"entity": "object of the assignments collection class"},
                {"entity": "assignments of task class"}
            ]
        }
    },
    {
        "#": "10",
        "*": "functional",
        ":": "The human resource class can have objects of resource assignments which assigns this resource to tasks.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "can have"},
        "input": {
            "-set-": [
                {"entity": "multiple objects of resource assignments which assigns this resource to tasks"},
                {"entity": "tasks"}
            ]
        }
    },
    {
        "#": "11",
        "*": "functional",
        ":": "The human resource class provides function to get the list of objects of resource assignments which assigns this resource to tasks.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "list of objects of resource assignments which assigns this resource to tasks"}
            ]
        }
    },
    {
        "#": "13-1",
        "*": "functional",
        ":": "Task property GUI class provides interface and functions to add and remove human resource assignments.",
        "agent": {"entity": "task property GUI class"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "human resource assignments"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        }
    },
    {
        "#": "13-2",
        "*": "functional",
        ":": "A task property GUI class provides interface and functions to add and remove human resource assignments.",
        "agent": {"entity": "task property GUI class"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "human resource assignments"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "human resource assignment"}
            ]
        }
    },
    {
        "#": "15",
        "*": "functional",
        ":": "A GUI class uses an object of resource tree table model class to display the resource tree.",
        "agent": {"entity": "GUI class"},
        "operation": {"operation": "display"},
        "input": {
            "-set-": [
                {"entity": "object of resource tree table model class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "resource tree"}
            ]
        }
    },
    {
        "#": "16",
        "*": "functional",
        ":": "The resource tree table model provides functions to build subtrees based on dependencies.",
        "agent": {"entity": "resource tree table model"},
        "operation": {"operation": "build"},
        "input": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "subtrees of resource tree"}
            ]
        }
    },
    {
        "#": "18",
        "*": "functional",
        ":": "A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.",
        "agent": {"entity": "human resource load distribution GUI class"},
        "operation": {"operation": "capture"},
        "input": {
            "-set-": [
                {"entity": "objects of a load distribution class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "hours each person is supposed to work"}
            ]
        }
    },
    {
        "#": "20",
        "*": "functional",
        ":": "The load distribution class provides functions to calculate the distribution based on tasks and human resources using task manager.",
        "agent": {"entity": "load distribution class"},
        "operation": {"operation": "calculate"},
        "input": {
            "-set-": [
                {"entity": "tasks"},
                {"entity": "human resources"},
                {"entity": "task manager"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "distribution"}
            ]
        }
    },
    {
        "#": "23",
        "*": "functional",
        ":": "GUI needs to provide ability to change length of a task.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "length of a task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "length of a task"}
            ]
        }
    },
    {
        "#": "25",
        "*": "functional",
        ":": "User should be able to change the length of a task by dragging-and-dropping the bar on the GUI.",
        "agent": {"entity": "user"},
        "operation": {"operation": "can change"},
        "input": {
            "-set-": [
                {"entity": "length of a task"},
                {"entity": "bar on the GUI"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "length of a task"}
            ]
        },
        "restriction": {
            "-set-": ["by dragging-and-dropping the bar on the GUI"]
        }
    },
    {
        "#": "27",
        "*": "functional",
        ":": "User should be able to change the length of a task via date picker control.",
        "agent": {"entity": "user"},
        "operation": {"operation": "can change"},
        "input": {
            "-set-": [
                {"entity": "length of a task"},
                {"entity": "date picker control"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "length of a task"}
            ]
        },
        "restriction": {
            "-set-": ["via date picker control"]
        }
    },
    {
        "#": "29",
        "*": "functional",
        ":": "A dependency class contains a dependant task and a dependee task.",
        "agent": {"entity": "dependency class"},
        "operation": {"operation": "contain"},
        "input": {
            "-set-": [
                {"entity": "dependant task"},
                {"entity": "dependee task"}
            ]
        }
    },
    {
        "#": "30",
        "*": "functional",
        ":": "A dependency class provides functions to get the dependant task and the dependee task.",
        "agent": {"entity": "dependency class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "dependant task"},
                {"entity": "dependee task"}
            ]
        }
    },
    {
        "#": "31",
        "*": "functional",
        ":": "The dependency class also contains constraint to show the start date of the dependee task.",
        "agent": {"entity": "dependency class"},
        "operation": {"operation": "show"},
        "input": {
            "-set-": [
                {"entity": "constraint"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "constraint of the dependency"}
            ]
        }
    },
    {
        "#": "33",
        "*": "functional",
        ":": "A class is used to represent the constraint that the start date of the dependee task should not be earlier than the end date of the dependent task.",
        "agent": {"entity": "class"},
        "operation": {"operation": "represent"},
        "input": {
            "-set-": [
                {"entity": "start date of the dependee task"},
                {"entity": "end date of the dependent task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "constraint"}
            ]
        }
    },
    {
        "#": "35",
        "*": "functional",
        ":": "A collection of dependency class is used to manage dependencies.",
        "agent": {"entity": "collection of dependency class"},
        "operation": {"operation": "manage"},
        "input": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "36-1",
        "*": "functional",
        ":": "A collection of dependency class contains objects of dependency classes.",
        "agent": {"entity": "collection of dependency class"},
        "operation": {"operation": "contain"},
        "input": {
            "-set-": [
                {"entity": "objects of dependency classes"}
            ]
        }
    },
    {
        "#": "36-2",
        "*": "functional",
        ":": "A collection of dependency class provides functions to create, delete, and get dependencies.",
        "agent": {"entity": "collection of dependency class"},
        "operation": {"operation": "create"},
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "36-3",
        "*": "functional",
        ":": "A collection of dependency class provides functions to create, delete, and get dependencies.",
        "agent": {"entity": "collection of dependency class"},
        "operation": {"operation": "delete"},
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "36-4",
        "*": "functional",
        ":": "A collection of dependency class provides functions to create, delete, and get dependencies.",
        "agent": {"entity": "collection of dependency class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "38-1",
        "*": "functional",
        ":": "Task property GUI class provides interface and functions to add and remove dependencies by using an object of the dependency collection.",
        "agent": {"entity": "task property GUI class"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "dependencies"},
                {"entity": "object of the dependency collection"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        },
        "restriction": {
            "-set-": ["by using an object of the dependency collection"]
        }
    },
    {
        "#": "38-2",
        "*": "functional",
        ":": "A task property GUI class provides interface and functions to add and remove dependencies by using an object of the dependency collection.",
        "agent": {"entity": "task property GUI class"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "dependencies"},
                {"entity": "object of the dependency collection"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        },
        "restriction": {
            "-set-": ["by using an object of the dependency collection"]
        }
    },
    {
        "#": "40",
        "*": "functional",
        ":": "A graphic area GUI class provides function to draw dependency.",
        "agent": {"entity": "graphic area GUI class"},
        "operation": {"operation": "draw"},
        "output": {
            "-set-": [
                {"entity": "dependency"}
            ]
        }
    },
    {
        "#": "41",
        "*": "functional",
        ":": "A graphic area GUI class uses an object of task manager to add dependencies.",
        "agent": {"entity": "graphic area GUI class"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "object of task manager"},
                {"entity": "dependencies"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "43",
        "*": "functional",
        ":": "The task manager class uses an object of dependency collection class to manage dependencies.",
        "agent": {"entity": "task manager class"},
        "operation": {"operation": "manage"},
        "input": {
            "-set-": [
                {"entity": "object of dependency collection class"},
                {"entity": "dependencies"}
            ]
        }
    },
    {
        "#": "45",
        "*": "functional",
        ":": "An object of the recalculating task schedule algorithm class is used to change the start/end date based on dependency changes.",
        "agent": {"entity": "object of the recalculating task schedule algorithm class"},
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "dependency changes"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start/end date"}
            ]
        }
    },
    {
        "#": "46-1",
        "*": "functional",
        ":": "The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.",
        "agent": {"entity": "algorithm class"},
        "operation": {"operation": "fulfill"},
        "input": {
            "-set-": [
                {"entity": "constraints"}
            ]
        }
    },
    {
        "#": "46-2",
        "*": "functional",
        ":": "The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.",
        "agent": {"entity": "algorithm class"},
        "operation": {"operation": "modify"},
        "output": {
            "-set-": [
                {"entity": "start or end date of the tasks"}
            ]
        }
    },
    {
        "#": "48",
        "*": "functional",
        ":": "Application needs to keep track of the start and end times of the tasks.",
        "agent": {"entity": "application"},
        "operation": {"operation": "keep track of"},
        "output": {
            "-set-": [
                {"entity": "start/end times of the tasks"}
            ]
        }
    },
    {
        "#": "50",
        "*": "functional",
        ":": "Application needs to keep track of subtasks in a task.",
        "agent": {"entity": "application"},
        "operation": {"operation": "keep track of"},
        "input": {
            "-set-": [
                {"entity": "subtasks in a task"}
            ]
        }
    },
    {
        "#": "52",
        "*": "functional",
        ":": "Every time Start/End time of a subtask changes, the start/end time of the parent task need to change accordingly.",
        "event": {
            "-set-": [{
                "#": "52-condition",
                "*": "condition",
                "operation": {"operation": "change"},
                "input": {
                    "-set-": [
                        {"entity": "start/end time of a subtask"}
                    ]
                },
                "output": {
                    "-set-": [
                        {"entity": "start/end time of a subtask"}
                    ]
                }
            }]
        },
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "start/end time of the parent task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start/end time of the parent task"}
            ]
        },
        "restriction": {
            "-set-": ["accordingly"]
        }
    },
    {
        "#": "54",
        "*": "functional",
        ":": "Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",
        "event": {
            "-set-": [{
                "#": "54-condition",
                "*": "condition",
                "operation": {"operation": "change"},
                "input": {
                    "-set-": [
                        {"entity": "start/end time of a task"}
                    ]
                },
                "output": {
                    "-set-": [
                        {"entity": "start/end time of a task"}
                    ]
                }
            }]
        },
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "start/end time of one or more subtasks"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start/end time of one or more subtasks"}
            ]
        }
    },
    {
        "#": "56",
        "*": "functional",
        ":": "A graphic area GUI class provides a function to draw dependency.",
        "agent": {"entity": "graphic area GUI class"},
        "operation": {"operation": "draw"},
        "input": {
            "-set-": [
                {"entity": "dependency"}
            ]
        }
    },
    {
        "#": "57",
        "*": "functional",
        ":": "A graphic area GUI class uses an object of the task manager to add dependencies",
        "agent": {"entity": "graphic area GUI class"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "dependency"}
            ]
        }
    },
    {
        "#": "61",
        "*": "functional",
        ":": "The class of dependency collection provides a function to check if the new dependency will cause a loop, each time a object of dependency class is created.",
        "event": {
            "-set-": [{
                "#": "each time a object of dependency class is created",
                "*": "condition",
                "operation": {"operation": "create"},
                "output": {
                    "-set-": [
                        {"entity": "object of dependency class"}
                    ]
                }
            }]
        },
        "agent": {"entity": "dependency collection class"},
        "operation": {"operation": "check"},
        "input": {
            "-set-": [
                {"entity": "new dependency"}
            ]
        }
    },
    {
        "#": "62",
        "*": "functional",
        ":": "The class of dependency collection returns an exception if there is a loop.",
        "event": {
            "-set-": [{
                "agent": {"entity": "loop"},
                "operation": {"operation": "there be"}
            }]
        },
        "agent": {"entity": "dependency collection class"},
        "operation": {"operation": "return"},
        "output": {
            "-set-": [
                {"entity": "exception"}
            ]
        }
    },
    {
        "#": "64-1",
        "*": "functional",
        ":": "GUI needs to provide ability to display critical path and make the changes affecting critical path updated.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "display"},
        "input": {
            "-set-": [
                {"entity": "critical path"}
            ]
        }
    },
    {
        "#": "64-2",
        "*": "functional",
        ":": "GUI needs to provide ability to display critical path and make the changes affecting critical path updated.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "update"},
        "input": {
            "-set-": [
                {"entity": "changes affecting critical path"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "changes affecting critical path"}
            ]
        }
    },
    {
        "#": "66",
        "*": "functional",
        ":": "The system should be able to evaluate critical path in a project.",
        "agent": {"entity": "system"},
        "operation": {"operation": "can evaluate"},
        "input": {
            "-set-": [
                {"entity": "critical path in a project"}
            ]
        }
    },
    {
        "#": "68",
        "*": "functional",
        ":": "The human resource class contains the variable holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "contain"},
        "input": {
            "-set-": [
                {"entity": "variable holidays"}
            ]
        }
    },
    {
        "#": "69-1",
        "*": "functional",
        ":": "The human resource class provides functions to change and to get holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "holidays"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "69-2",
        "*": "functional",
        ":": "The human resource class provides functions to change and to get holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "70",
        "*": "functional",
        ":": "There can be multiple holidays.",
        "agent": {"entity": "multiple holidays"},
        "operation": {"operation": "there be"}
    },
    {
        "#": "72-1",
        "*": "functional",
        ":": "The holiday class provides functions to set the start/end date of the holiday and to get the duration of the holiday.",
        "agent": {"entity": "holiday class"},
        "operation": {"operation": "set"},
        "output": {
            "-set-": [
                {"entity": "start/end date of the holiday"}
            ]
        }
    },
    {
        "#": "72-2",
        "*": "functional",
        ":": "The holiday class provides functions to set the start/end date of the holiday and to get the duration of the holiday.",
        "agent": {"entity": "holiday class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "duration of the holiday"}
            ]
        }
    },
    {
        "#": "74",
        "*": "functional",
        ":": "The human resource class provides a function to change the availability of the person based on holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "availability of the person"},
                {"entity": "holidays"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "availability of the person"}
            ]
        }
    },
    {
        "#": "76",
        "*": "functional",
        ":": "GUI needs to provide ability to assign tasks to people.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "assign"},
        "input": {
            "-set-": [
                {"entity": "people"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "tasks"}
            ]
        }
    },
    {
        "#": "78",
        "*": "functional",
        ":": "GUI needs to provide ability to assign people to tasks.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "assign"},
        "input": {
            "-set-": [
                {"entity": "tasks"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "people"}
            ]
        }
    },
    {
        "#": "80",
        "*": "functional",
        ":": "GUI needs to provide ability to show utilization of a person.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "show"},
        "output": {
            "-set-": [
                {"entity": "utilization of a person"}
            ]
        }
    },
    {
        "#": "82",
        "*": "functional",
        ":": "GUI needs to provide ability to show whether a person is underutilized and overbooked.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "show"},
        "output": {
            "-set-": [
                {"entity": "underutilized person"},
                {"entity": "overbooked person"}
            ]
        }
    },
    {
        "#": "84",
        "*": "functional",
        ":": "To create a new task, an object of TaskManager class is passed to the class constructor.",
        "operation": {"operation": "pass"},
        "input": {
            "-set-": [
                {"entity": "object of TaskManager class"},
                {"entity": "class constructor"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "new task"}
            ]
        }
    },
    {
        "#": "85",
        "*": "functional",
        ":": "The TaskManager takes care of a resource allocation using ResourceAssignmentCollection class.",
        "agent": {"entity": "TaskManager"},
        "operation": {"operation": "take care of"},
        "input": {
            "-set-": [
                {"entity": "ResourceAssignmentCollection class"},
                {"entity": "resource allocation"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "resource allocation"}
            ]
        }
    },
    {
        "#": "87",
        "*": "functional",
        ":": "The task class provides a public method SetStart() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class.",
        "agent": {"entity": "task class"},
        "operation": {"operation": "specify"},
        "input": {
            "-set-": [
                {"entity": "object of GanttCalendar class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start date of the task"}
            ]
        }
    },
    {
        "#": "90",
        "*": "functional",
        ":": "The task class provides a public method SetEnd() which allows to specify ending date for the task. As input argument the method takes an object of GanttCalendar class.",
        "agent": {"entity": "task class"},
        "operation": {"operation": "specify"},
        "input": {
            "-set-": [
                {"entity": "object of GanttCalendar class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "end date of the task"}
            ]
        }
    },
    {
        "#": "93",
        "*": "functional",
        ":": "The Task class provides a public method SetDuration() which allows to specify the duration of the task. As input argument the method takes an object of TaskLength class.",
        "agent": {"entity": "task class"},
        "operation": {"operation": "specify"},
        "input": {
            "-set-": [
                {"entity": "object of TaskLength class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "duration of the task"}
            ]
        }
    },
    {
        "#": "96",
        "*": "functional",
        ":": "To delete a task from the Calendar, the GanttProject class call delete method and supplied TaskId parameter.",
        "agent": {"entity": "GanttProject class"},
        "operation": {"operation": "call"},
        "input": {
            "-set-": [
                {"entity": "task"},
                {"entity": "delete method"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "TaskId parameter"}
            ]
        }
    },
    {
        "#": "97",
        "*": "functional",
        ":": "The adjustment of allocated resources and links to other tasks takes place through interfacing with the following classes DefaultMutableTreeNode, GanttTreeTableNode, TaskNode, and AdjustTaskBoundsAlgorithm.",
        "agent": {"entity": "adjustment of allocated resources and links to other tasks takes"},
        "operation": {"operation": "take place"},
        "input": {
            "-set-": [
                {"entity": "DefaultMutableTreeNode"},
                {"entity": "GanttTreeTableNode"},
                {"entity": "TaskNode"},
                {"entity": "AdjustTaskBoundsAlgorithm"}
            ]
        }
    },
    {
        "#": "99",
        "*": "functional",
        ":": "When deleting a task, the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the deleted task.",
        "event": {
            "-set-": [{
                "#": "When deleting a task",
                "*": "condition",
                "agent": {"entity": "GanttProject class"},
                "operation": {"operation": "delete"},
                "output": {
                    "-set-": [
                        {"entity": "task"}
                    ]
                }
            }]
        },
        "agent": {"entity": "GanttProject class"},
        "operation": {"operation": "identify"},
        "input": {
            "-set-": [
                {"entity": "DefaultMutableTreeNode"},
                {"entity": "GanttTreeTableNode"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "parent of the deleted task"}
            ]
        }
    },
    {
        "#": "101-1",
        "*": "functional",
        ":": "When deleting a task, the GanttProject class calls AdjustTaskBoundsAlgorithm and passes the parent of the deleted task as a parameter.",
        "event": {
            "-set-": [{
                "#": "When deleting a task",
                "*": "condition",
                "agent": {"entity": "GanttProject class"},
                "operation": {"operation": "delete"},
                "output": {
                    "-set-": [
                        {"entity": "task"}
                    ]
                }
            }]
        },
        "agent": {"entity": "GanttProject class"},
        "operation": {"operation": "call"},
        "input": {
            "-set-": [
                {"entity": "AdjustTaskBoundsAlgorithm"}
            ]
        }
    },
    {
        "#": "101-2",
        "*": "functional",
        ":": "When deleting a task, the GanttProject class calls AdjustTaskBoundsAlgorithm and passes the parent of the deleted task as a parameter.",
        "event": {
            "-set-": [{
                "#": "When deleting a task",
                "*": "condition",
                "agent": {"entity": "GanttProject class"},
                "operation": {"operation": "delete"},
                "output": {
                    "-set-": [
                        {"entity": "task"}
                    ]
                }
            }]
        },
        "agent": {"entity": "GanttProject class"},
        "operation": {"operation": "pass"},
        "output": {
            "-set-": [
                {"entity": "parent of the deleted task"}
            ]
        },
        "restriction": {
            "-set-": ["as a parameter"]
        }
    },
    {
        "#": "102",
        "*": "functional",
        ":": "The AdjustTaskBoundsAlgorithm takes care of handling and releasing resources associated with the deleted task.",
        "agent": {"entity": "AdjustTaskBoundsAlgorithm"},
        "operation": {"operation": "take care of"},
        "input": {
            "-set-": [
                {"entity": "handling and releasing resources associated with the deleted task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "handling and releasing resources associated with the deleted task"}
            ]
        }
    },
    {
        "#": "104",
        "*": "functional",
        ":": "GUI should able to provide ability to change task name.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "task name"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "task name"}
            ]
        }
    },
    {
        "#": "106",
        "*": "functional",
        ":": "GUI should able to provide ability to change start/end date of a task.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "can change"},
        "input": {
            "-set-": [
                {"entity": "start/end date of a task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start/end date of a task"}
            ]
        }
    },
    {
        "#": "108",
        "*": "functional",
        ":": "GUI should able to provide ability to set progress on a task.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "can set"},
        "input": {
            "-set-": [
                {"entity": "progress"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "progress"}
            ]
        },
        "restriction": {
            "-set-": ["on a task"]
        }
    },
    {
        "#": "110",
        "*": "functional",
        ":": "When the start/end date of a task are changed, the start/end dates of the subtasks need to change accordingly.",
        "event": {
            "-set-": [{
                "#": "When the start/end date of a task are changed",
                "*": "condition",
                "operation": {"operation": "change"},
                "input": {
                    "-set-": [
                        {"entity": "start/end date of a task"}
                    ]
                },
                "output": {
                    "-set-": [
                        {"entity": "start/end date of a task"}
                    ]
                }
            }]
        },
        "operation": {"operation": "change"},
        "input": {
            "-set-": [
                {"entity": "start/end dates of the subtasks"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "start/end dates of the subtasks"}
            ]
        },
        "restriction": {
            "-set-": ["accordingly"]
        }
    },
    {
        "#": "112",
        "*": "functional",
        ":": "To add tasks as subtasks a method which indent the selected task nodes in GUI and change them to be subtasks is used.",
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "tasks"},
                {"entity": "subtasks"},
                {"entity": "method which indent the selected task nodes in GUI and change them to be subtasks"},
                {"entity": "selected task nodes in GUI"}
            ]
        }
    },
    {
        "#": "113",
        "*": "functional",
        ":": "A manager of task hierarchy provides functions to update the relationship between tasks.",
        "agent": {"entity": "manager of task hierarchy"},
        "operation": {"operation": "update"},
        "input": {
            "-set-": [
                {"entity": "relationship between tasks"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship between tasks"}
            ]
        }
    },
    {
        "#": "115",
        "*": "functional",
        ":": "The manager of task hierarchy provides a method to move a task node to a specific position.",
        "agent": {"entity": "manager of task hierarchy"},
        "operation": {"operation": "move"},
        "input": {
            "-set-": [
                {"entity": "task node"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "task node"}
            ]
        },
        "restriction": {
            "-set-": ["to a specific position"]
        }
    },
    {
        "#": "117",
        "*": "functional",
        ":": "To remove tasks as subtasks GanttTree2 class calls a method which dedent selected task nodes in GUI.",
        "agent": {"entity": "GanttTree2 class"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "tasks"},
                {"entity": "subtasks"},
                {"entity": "method which dedent selected task nodes in GUI"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "tasks"}
            ]
        }
    },
    {
        "#": "118-1",
        "*": "functional",
        ":": "An object of a class is used to remove relationship between selected tasks and their original parents.",
        "agent": {"entity": "object of a class"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "selected tasks"},
                {"entity": "original parents of selected tasks"},
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        }
    },
    {
        "#": "118-2",
        "*": "functional",
        ":": "An object of a class is used to add relationship between selected tasks and their new parents.",
        "agent": {"entity": "object of a class"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "selected tasks"},
                {"entity": "new parents of selected tasks"},
                {"entity": "relationship between selected tasks and their new parents"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship between selected tasks and their new parents"}
            ]
        }
    },
    {
        "#": "120",
        "*": "functional",
        ":": "To remove tasks as subtasks a method which dedent selected task nodes in GUI is used.",
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "tasks"},
                {"entity": "subtasks"},
                {"entity": "relationship between selected tasks and their new parents"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "tasks"}
            ]
        }
    },
    {
        "#": "121-1",
        "*": "functional",
        ":": "The task tree model provides methods to remove relationship between selected tasks and their original parents.",
        "agent": {"entity": "task tree model"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "selected tasks"},
                {"entity": "original parents of selected tasks"},
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        }
    },
    {
        "#": "121-2",
        "*": "functional",
        ":": "The task tree model provides methods to add relationship between selected tasks and their new parents.",
        "agent": {"entity": "task tree model"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "selected tasks"},
                {"entity": "original parents of selected tasks"},
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship between selected tasks and their original parents"}
            ]
        }
    },
    {
        "#": "123",
        "*": "functional",
        ":": "Milestone has only time point of occurrence.",
        "agent": {"entity": "Milestone"},
        "operation": {"operation": "have"},
        "input": {
            "-set-": [
                {"entity": "time point of occurrence"}
            ]
        },
        "restriction": {
            "-set-": ["only"]
        }
    },
    {
        "#": "126",
        "*": "functional",
        ":": "User should be able to create milestones.",
        "agent": {"entity": "user"},
        "operation": {"operation": "can create"},
        "output": {
            "-set-": [
                {"entity": "milestones"}
            ]
        }
    },
    {
        "#": "128",
        "*": "functional",
        ":": "User interface should be able to provide an ability to specify whether a specific task in a milestone.",
        "agent": {"entity": "user interface"},
        "operation": {"operation": "can specify"},
        "input": {
            "-set-": [
                {"entity": "specific task"},
                {"entity": "milestone"}
            ]
        }
    },
    {
        "#": "130",
        "*": "functional",
        ":": "Milestone should be displayed visually differently from regular tasks.",
        "operation": {"operation": "display"},
        "input": {
            "-set-": [
                {"entity": "regular tasks"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "milestone"}
            ]
        },
        "restriction": {
            "-set-": ["visually", "differently"]
        }
    },
    {
        "#": "132-1",
        "*": "functional",
        ":": "A GUI of task property provides interface and functions to add and remove human resource assignments by using an object of the resource assignments collection class.",
        "agent": {"entity": "GUI of task property"},
        "operation": {"operation": "add"},
        "input": {
            "-set-": [
                {"entity": "human resource assignments"},
                {"entity": "object of the resource assignments collection class"}
            ]
        },
        "restriction": {
            "-set-": ["by using an object of the resource assignments collection class"]
        }
    },
    {
        "#": "132-2",
        "*": "functional",
        ":": "A GUI of task property provides interface and functions to add and remove human resource assignments by using an object of the resource assignments collection class.",
        "agent": {"entity": "GUI of task property"},
        "operation": {"operation": "remove"},
        "input": {
            "-set-": [
                {"entity": "human resource assignments"},
                {"entity": "object of the resource assignments collection class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "human resource assignments"}
            ]
        },
        "restriction": {
            "-set-": ["by using an object of the resource assignments collection class"]
        }
    },
    {
        "#": "134",
        "*": "functional",
        ":": "The human resource class contains name, phone, email, and holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "contain"},
        "input": {
            "-set-": [
                {"entity": "name"},
                {"entity": "phone"},
                {"entity": "email"},
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "135-1",
        "*": "functional",
        ":": "The human resource class provides functions to set and get name, phone, email, and holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "set"},
        "input": {
            "-set-": [
                {"entity": "name"},
                {"entity": "phone"},
                {"entity": "email"},
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "135-2",
        "*": "functional",
        ":": "The human resource class provides functions to set and get name, phone, email, and holidays.",
        "agent": {"entity": "human resource class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "name"},
                {"entity": "phone"},
                {"entity": "email"},
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "136",
        "*": "functional",
        ":": "A class is used to represent the holidays.",
        "agent": {"entity": "class"},
        "operation": {"operation": "represent"},
        "input": {
            "-set-": [
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "137",
        "*": "functional",
        ":": "There can be multiple holidays.",
        "agent": {"entity": "multiple holidays"},
        "operation": {"operation": "there be"}
    },
    {
        "#": "139",
        "*": "functional",
        ":": "The class for holidays provides functions to get the start/end date.",
        "agent": {"entity": "holiday class"},
        "operation": {"operation": "get"},
        "output": {
            "-set-": [
                {"entity": "holidays"}
            ]
        }
    },
    {
        "#": "140",
        "*": "functional",
        ":": "The class for holidays also provides a function to check if a special date is in holiday.",
        "agent": {"entity": "holiday class"},
        "operation": {"operation": "check"},
        "input": {
            "-set-": [
                {"entity": "special date"},
                {"entity": "holiday"}
            ]
        }
    },
    {
        "#": "142",
        "*": "functional",
        ":": "A human resource assignment class is used to represent the relationship between one task and one human resource.",
        "agent": {"entity": "human resource assignment class"},
        "operation": {"operation": "represent"},
        "input": {
            "-set-": [
                {"entity": "relationship between one task and one human resource"},
                {"entity": "task"},
                {"entity": "human resource"}
            ]
        }
    },
    {
        "#": "143",
        "*": "functional",
        ":": "The human resource assignment class provides functions to get the task and the human resource.",
        "agent": {"entity": "human resource assignment class"},
        "operation": {"operation": "get"},
        "input": {
            "-set-": [
                {"entity": "task"},
                {"entity": "human resource"}
            ]
        }
    },
    {
        "#": "145",
        "*": "functional",
        ":": "GUI needs to provide ability to delete resources from a project.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "delete"},
        "input": {
            "-set-": [
                {"entity": "resources"},
                {"entity": "project"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "resources"}
            ]
        }
    },
    {
        "#": "147",
        "*": "functional",
        ":": "An assignment of a resource to a task is captured as a relationship.",
        "operation": {"operation": "capture"},
        "input": {
            "-set-": [
                {"entity": "assignment of a resource to a task"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "relationship"}
            ]
        }
    },
    {
        "#": "149",
        "*": "functional",
        ":": "When a resource is removed, all the tasks where the resource is assigned need to be updated.",
        "event": {
            "-set-": [{
                "#": "When a resource is removed",
                "*": "condition",
                "operation": {"operation": "remove"},
                "input": {
                    "-set-": [
                        {"entity": "resource"}
                    ]
                }
            }]
        },
        "operation": {"operation": "update"},
        "input": {
            "-set-": [
                {"entity": "all the tasks where the resource is assigned"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "all the tasks where the resource is assigned"}
            ]
        }
    },
    {
        "#": "151",
        "*": "functional",
        ":": "A GUI provides interface and functions to edit the properties of objects of the human resource class.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "edit"},
        "input": {
            "-set-": [
                {"entity": "properties of objects of the human resource class"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "properties of objects of the human resource class"}
            ]
        }
    },
    {
        "#": "153",
        "*": "functional",
        ":": "GUI needs to provide ability to link tasks in a project.",
        "agent": {"entity": "GUI"},
        "operation": {"operation": "link"},
        "input": {
            "-set-": [
                {"entity": "tasks in a project"}
            ]
        }
    },
    {
        "#": "155",
        "*": "functional",
        ":": "The fact of linking of one task to another should be captured as dependency between two tasks.",
        "operation": {"operation": "capture"},
        "output": {
            "-set-": [
                {"entity": "linking of one task to another"},
                {"entity": "dependency between two tasks"}
            ]
        }
    },
    {
        "#": "157",
        "*": "functional",
        ":": "When a two or more tasks are link, there should be check conducted for potential collisions on the chart.",
        "event": {
            "-set-": [{
                "#": "When a resource is removed",
                "*": "condition",
                "operation": {"operation": "link"},
                "input": {
                    "-set-": [
                        {"entity": "two or more tasks"}
                    ]
                }
            }]
        },
        "operation": {"operation": "check"},
        "input": {
            "-set-": [
                {"entity": "chart"}
            ]
        },
        "output": {
            "-set-": [
                {"entity": "potential collisions on the chart"}
            ]
        }
    },
    {
        "#": "159",
        "*": "functional",
        ":": "The start/end dates for the graph can be either flexible or rigid.",
        "agent": {"entity": "start/end dates for the graph"},
        "operation": {"operation": "be either flexible or rigid"}
    }
]