{
    "function": {
        "inout_include": {
            "argument": [
                ["Functional", "Functional"],
                ["Functional", "Condition"],
                ["Condition", "Functional"],
                ["Condition", "Condition"]
            ],
            "return": "boolean",
            "logic": {
                "or": [
                    {
                        "and": [
                            {
                                "include": [
                                    "argument 1.input",
                                    "argument 2.input"
                                ]
                            },
                            {
                                "include": [
                                    "argument 1.output",
                                    "argument 2.output"
                                ]
                            }
                        ]
                    },
                    {
                        "and": [
                            {
                                "include": [
                                    "argument 2.input",
                                    "argument 1.input"
                                ]
                            },
                            {
                                "include": [
                                    "argument 2.output",
                                    "argument 1.output"
                                ]
                            }
                        ]
                    }
                ]
            }
        },

        "base_contradict": {
            "argument": [
                ["Functional", "Functional"],
                ["Functional", "Condition"],
                ["Condition", "Functional"],
                ["Condition", "Condition"]
            ],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.agent",
                            "argument 2.agent"
                        ]
                    },
                    {
                        "contradict": [
                            "argument 1.operation",
                            "argument 2.operation"
                        ]
                    },
                    {
                        "inout_include": [
                            "argument 1",
                            "argument 2"
                        ]
                    }
                ]
            }
        },

        "base_include": {
            "argument": [
                ["Functional", "Functional"],
                ["Functional", "Condition"],
                ["Condition", "Functional"],
                ["Condition", "Condition"]
            ],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.agent",
                            "argument 2.agent"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.operation",
                            "argument 2.operation"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.input",
                            "argument 2.input"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.output",
                            "argument 2.output"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.restriction",
                            "argument 2.restriction"
                        ]
                    }
                ]
            }
        },

        "operation_event_condition": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "all": [
                    "condition",
                    "argument 2.event",
                    {
                        "operation_include": [
                            "argument 1.operation",
                            "condition"
                        ]
                    }
                ]
            }
        },

        "input_output_condition": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "any": [
                    "inEntity",
                    "argument 2.input",
                    {
                        "any": [
                            "outEntity",
                            "argument 1.output",
                            {
                                "entity_include": [
                                    "outEntity",
                                    "inEntity"
                                ]
                            }
                        ]
                    }
                ]
            }
        },

        "operation_include": {
            "argument": [["Operation", "Operation"]],
            "return": "boolean",
            "logic": {
                "or": [
                    {
                        "equal": [
                            "argument 1",
                            "argument 2"
                        ]
                    },
                    {
                        "and": [
                            "argument 2.isAble",
                            {
                                "equal": [
                                    "argument 1.reaction",
                                    "argument 2.reaction"
                                ]
                            },
                            {
                                "not": [
                                    "argument 1.isAble"
                                ]
                            }
                        ]
                    }
                ]
            }
        },

        "entity_include": {
            "argument": [["Entity", "Entity"]],
            "return": "boolean",
            "logic": {
                "or": [
                    {
                        "and": [
                            {
                                "equal": [
                                    "argument 1.base",
                                    "argument 2.base"
                                ]
                            },
                            {
                                "include": [
                                    "argument 1.modifier",
                                    "argument 2.modifier"
                                ]
                            }
                        ]
                    },
                    {
                        "equal": [
                            "argument 1",
                            "argument 2.entirety"
                        ]
                    }
                ]
            }
        },

        "operation_contradict": {
            "argument": [["Operation", "Operation"]],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.reaction",
                            "argument 2.reaction"
                        ]
                    },
                    {
                        "not": [
                            "argument 1.isAble"
                        ]
                    },
                    {
                        "not": [
                            "argument 2.isAble"
                        ]
                    },
                    {
                        "not": [
                            {
                                "equal": [
                                    "argument 1.isNot",
                                    "argument 2.isNot"
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    },

    "rule": {

        "operation_inconsistency": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.event",
                            "argument 2.event"
                        ]
                    },
                    {
                        "base_contradict": [
                            "argument 1",
                            "argument 2"
                        ]
                    }
                ]
            }
        },

        "restriction_inconsistency": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.event",
                            "argument 2.event"
                        ]
                    },
                    {
                        "equal": [
                            "argument 1.agent",
                            "argument 2.agent"
                        ]
                    },
                    {
                        "equal": [
                            "argument 1.operation",
                            "argument 2.operation"
                        ]
                    },
                    {
                        "inout_include": [
                            "argument 1",
                            "argument 2"
                        ]
                    },
                    {
                        "not equal": [
                            "argument 1.restriction",
                            "argument 2.restriction"
                        ]
                    }
                ]
            }
        },

        "event_inconsistency": {
            "argument": [["Functional"]],
            "return": "boolean",
            "logic": {
                "all": [
                    "event1",
                    "argument 1.event",
                    {
                        "any": [
                            "event2",
                            "argument 1.event",
                            {
                                "base_contradict": [
                                    "event1",
                                    "event2"
                                ]
                            }
                        ]
                    }
                ]
            }
        },

        "operation_inclusion": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "equal": [
                            "argument 1.event",
                            "argument 2.event"
                        ]
                    },
                    {
                        "base_include": [
                            "argument 1",
                            "argument 2"
                        ]
                    }
                ]
            }
        },

        "event_inclusion": {
            "argument": [["Functional", "Functional"]],
            "return": "boolean",
            "logic": {
                "and": [
                    {
                        "include": [
                            "argument 1.event",
                            "argument 2.event"
                        ]
                    },
                    {
                        "equal": [
                            "argument 1.agent",
                            "argument 2.agent"
                        ]
                    },
                    {
                        "equal": [
                            "argument 1.operation",
                            "argument 2.operation"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.input",
                            "argument 2.input"
                        ]
                    },
                    {
                        "include": [
                            "argument 1.output",
                            "argument 2.output"
                        ]
                    },
                    {
                        "equal": [
                            "argument 1.restriction",
                            "argument 2.restriction"
                        ]
                    }
                ]
            }
        },

        "operation_event_interlock": {
            "argument": [["Functional..."]],
            "return": "boolean",
            "logic": {
                "all argument": [
                    "i",
                    "argument 1",
                    "-1",
                    {
                        "operation_event_condition": [
                            "@i@",
                            "@i+1@"
                        ]
                    }
                ]
            }
        },

        "input_output_interlock": {
            "argument": [["Functional..."]],
            "return": "boolean",
            "logic": {
                "all argument": [
                    "i",
                    "argument 1",
                    "-1",
                    {
                        "input_output_condition": [
                            "@i@",
                            "@i+1@"
                        ]
                    }
                ]
            }
        }

    }
}