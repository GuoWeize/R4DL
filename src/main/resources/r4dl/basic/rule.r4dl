function in_out_include
(functional, functional) boolean :
or (
    and (
        include (($1$.input), ($2$.input)),
        include (($1$.output), ($2$.output))
    ),
    and (
        include (($2$.input), ($1$.input)),
        include (($2$.output), ($1$.output))
    )
)
function in_out_include
(condition, condition) boolean :
or (
    and (
        include (($1$.input), ($2$.input)),
        include (($1$.output), ($2$.output))
    ),
    and (
        include (($2$.input), ($1$.input)),
        include (($2$.output), ($1$.output))
    )
)

function operation_contradict
(operation, operation) boolean :
and (
    synonym (($1$.reaction), ($2$.reaction)),
    ! (($1$.isAble)),
    ! (($2$.isAble)),
    != (($1$.isNot), ($2$.isNot))
)

function base_contradict
(functional, functional) boolean :
and (
    == (($1$.agent), ($2$.agent)),
    operation_contradict (($1$.operation), ($2$.operation)),
    in_out_include ($1$, $2$)
)
function base_contradict
(condition, condition) boolean :
and (
    == (($1$.agent), ($2$.agent)),
    operation_contradict (($1$.operation), ($2$.operation)),
    in_out_include ($1$, $2$)
)

function operation_include
(operation, operation) boolean :
or (
    == ($1$, $2$),
    and (
        synonym (($1$.reaction), ($2$.reaction)),
        ($2$.isAble),
        ! (($1$.isAble))
    )
)

function base_include
(functional, functional) boolean :
and (
    == (($1$.agent), ($2$.agent)),
    operation_include (($1$.operation), ($2$.operation)),
    include (($1$.input), ($2$.input)),
    include (($1$.output), ($2$.output)),
    include (($1$.restriction), ($2$.restriction))
)
function base_include
(functional, condition) boolean :
and (
    == (($1$.agent), ($2$.agent)),
    operation_include (($1$.operation), ($2$.operation)),
    include (($1$.input), ($2$.input)),
    include (($1$.output), ($2$.output)),
    include (($1$.restriction), ($2$.restriction))
)

function operation_event_condition
(functional, functional) boolean :
and (
    > (size_of(($2$.event)), 0),
    for all condition in ($2$.event)
        base_include ($1$, condition)
)

function entity_include
(entity, entity) boolean :
or (
    == ($1$, ($2$.owner)),
    == ($2$, ($1$.property)),
    == ($2$, ($1$.content)),
    and (
        synonym (($1$.base), ($2$.base)),
        include (($2$.constraints), ($1$.constraints))
    )
)

function input_output_condition
(functional, functional) boolean :
for any inEntity in ($2$.input)
    for any outEntity in ($1$.output)
        entity_include (outEntity, inEntity)

rule operation_inconsistency
(functional, functional) boolean :
and (
    == (($1$.event), ($2$.event)),
    base_contradict ($1$, $2$)
)

rule restriction_inconsistency
(functional, functional) boolean :
and (
    == (($1$.event), ($2$.event)),
    == (($1$.agent), ($2$.agent)),
    == (($1$.operation), ($2$.operation)),
    in_out_include ($1$, $2$),
    != (($1$.restriction), ($2$.restriction))
)

rule event_inconsistency
(functional) boolean :
and (
    > (size_of(($1$.event)), 1),
    for all event1 in ($1$.event)
        for any event2 in ($1$.event)
            base_contradict (event1, event2)
)

rule operation_inclusion
(functional, functional) boolean :
and (
    == (($1$.event), ($2$.event)),
    base_include ($1$, $2$)
)

function entity_include2
(entity, entity) boolean :
or (
    and (
        ! (is_null(($2$.owner))),
        entity_include2 ($1$, ($2$.owner))
    ),
    and (
        ! (is_null(($1$.property))),
        entity_include2 (($1$.property), $2$)
    ),
    and (
        ! (is_null(($1$.content))),
        entity_include2 (($1$.content), $2$)
    ),
    and (
        == (($1$.base), ($2$.base)),
        include (($2$.constraints), ($1$.constraints))
    )
)

rule interlock
(functional, functional) boolean :
for any inEntity in ($2$.input)
    for any outEntity in ($1$.output)
        entity_include2 (outEntity, inEntity)
